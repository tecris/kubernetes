#cloud-config

---
write-files:
  - path: /etc/conf.d/nfs
    permissions: '0644'
    content: |
      OPTS_RPC_MOUNTD=""
  - path: /opt/bin/wupiao
    permissions: '0755'
    content: |
      #!/bin/bash
      # [w]ait [u]ntil [p]ort [i]s [a]ctually [o]pen
      [ -n "$1" ] && \
        until curl -o /dev/null -sIf http://${1}; do \
          sleep 1 && echo .;
        done;
      exit $?
  - path: /etc/systemd/system/docker.service.d/50-insecure-registry.conf
    content: |
      [Service]
      Environment='DOCKER_OPTS=--insecure-registry="docker.nuc" --insecure-registry="docker.nuc:5000"'

ssh_authorized_keys:
# - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC8qlWJPi5evOvB1/1m9nMaSc9tf1Phq8npyY8TgK7dnn/GmHzvQMF+dAZCcwpVkr8cr8GJHcPlIXDix+lLJ8Ow1Vmh4K9n/lp5pXnKn4gxTxp0Ox11zAZu+WsTP0rl8iAjBoVe20MI64Ni1M4kdXMe7FFCS+tsveWoG09KMDbMR3SxmPHdt6mPpZhJM0e0fs/zkMbxbwH/muxnpH7Lr/569OOvC+5tFmKHa6+ZLGrU4s5KSJSTI8DyH99Z+z92ctMagyTgGrc5fK/LU2na7fpKpO+iodxLaOBjTH+duHc/qO6f/yez92wvflMqCQyRyAa+GnrjAMD20JpcRhBbJ1er eugen@cristea.org
- ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDTzh1R9yNlX8TTeTXbDQGqi8qIgA+YaJ8wMDah5y4yulBNLaLLGFm6E9LavVgxHscG8QtwnLki8iukkdXpGc7tXA6qkePxh9P66Q89j5xHpNFRWcGFe55qCcoB/en2u9LeFddP2saFCsHgHC+VFjuQ2hMFh3hudVsKbWJrp+WaJBXORJvfO04e2cg9LVN69RAiP4Q8wQk9cNkCeYxLczauis0+0EckAePyjry/K21azE4UneCyY7be6rr4M4hRW023gaqrBrh9gqH1z5uxJ6xv71TpQQd1EabSMpjE6l0wscxBEK/mm47tnZtdGoWt276BixWP36kjXz+kjvIKmb/ev4c6kNxdMrdc3so444Uszicqh6NiStNpCoftN8wIkk0m1uJrL0cTC/3nDPRGqziUN55u+6bgt2lYy+RtMUnRrvhQI+3nnIBh7KHmCvcNNsnXIBZSxlq9CPJ+2inDS86ePY4VLaxrfG27HD3H4Kt2kvmReSSGnfpu8UcVvjnVu8jFOx7bGqp5t/TSb4UZCBdsqcK0wVXSn3zDW94YLExPA3nFhKdUktlGuSVP3+QR1HWn+o1CxmA1XW43YxTGIb8gSKPHGz/ugnAqRqlm2eXdHh/728d7X4RmqF2TAPe/6A0UBtE8lBN8JVqQIwKMHhvDZK0b2oW6HBQ8VXBc5QxL6w== eugen@nuc

hostname: %HOSTNAME%
coreos:
  etcd2:
    name: master
    advertise-client-urls: http://%HOSTNAME%:2379
    initial-advertise-peer-urls: http://%HOSTNAME%:2380
    initial-cluster-token: k8s_etcd
    listen-client-urls: http://0.0.0.0:2379,http://0.0.0.0:4001
    listen-peer-urls: http://0.0.0.0:2380
    initial-cluster: master=http://%HOSTNAME%:2380
  fleet:
    public-ip: %HOSTNAME%
    metadata: "role=master"
  units:
    - name: generate-serviceaccount-key.service
      command: start
      content: |
        [Unit]
        Description=Generate service-account key file

        [Service]
        ExecStartPre=-/usr/bin/mkdir -p /opt/bin
        ExecStart=/bin/openssl genrsa -out /opt/bin/kube-serviceaccount.key 2048 2>/dev/null
        RemainAfterExit=yes
        Type=oneshot
    - name: setup-network-environment.service
      command: start
      content: |
        [Unit]
        Description=Setup Network Environment
        Documentation=https://github.com/kelseyhightower/setup-network-environment
        Requires=network-online.target
        After=network-online.target

        [Service]
        ExecStartPre=-/usr/bin/mkdir -p /opt/bin
        ExecStartPre=/usr/bin/curl -L -o /opt/bin/setup-network-environment -z /opt/bin/setup-network-environment http://192.168.1.72/repo/packages/k8/setup-network-environment/v1.0.0/setup-network-environment
        ExecStartPre=/usr/bin/chmod +x /opt/bin/setup-network-environment
        ExecStart=/opt/bin/setup-network-environment
        RemainAfterExit=yes
        Type=oneshot
    - name: etcd2.service
      command: start
    - name: fleet.service
      command: start
    - name:  systemd-networkd.service
      command: restart
    - name: flanneld.service
      command: start
      drop-ins:
        - name: 50-network-config.conf
          content: |
            [Unit]
            Requires=etcd2.service
            [Service]
            ExecStartPre=/usr/bin/etcdctl set /coreos.com/network/config '{"Network":"10.244.0.0/16", "Backend": {"Type": "vxlan"}}'
    - name: docker.service
      command: start
    - name: kube-apiserver.service
      command: start
      content: |
        [Unit]
        Description=Kubernetes API Server
        Documentation=https://github.com/GoogleCloudPlatform/kubernetes
        Requires=setup-network-environment.service etcd2.service generate-serviceaccount-key.service
        After=setup-network-environment.service etcd2.service generate-serviceaccount-key.service

        [Service]
        EnvironmentFile=/etc/network-environment
        ExecStartPre=-/usr/bin/mkdir -p /opt/bin
        ExecStartPre=/usr/bin/curl -L -o /opt/bin/kube-apiserver -z /opt/bin/kube-apiserver http://192.168.1.72/repo/packages/k8/1.0.1/kube-apiserver
        ExecStartPre=/usr/bin/chmod +x /opt/bin/kube-apiserver
        ExecStartPre=/opt/bin/wupiao 127.0.0.1:2379/v2/machines
        ExecStart=/opt/bin/kube-apiserver \
        --service_account_key_file=/opt/bin/kube-serviceaccount.key \
        --service_account_lookup=false \
        --admission_control=NamespaceLifecycle,NamespaceAutoProvision,LimitRanger,SecurityContextDeny,ServiceAccount,ResourceQuota \
        --runtime_config=api/v1 \
        --allow_privileged=true \
        --insecure_bind_address=0.0.0.0 \
        --insecure_port=8080 \
        --kubelet_https=true \
        --secure_port=6443 \
        --service-cluster-ip-range=10.100.0.0/16 \
        --etcd_servers=http://127.0.0.1:2379 \
        --logtostderr=true
        Restart=always
        RestartSec=10
    - name: kube-controller-manager.service
      command: start
      content: |
        [Unit]
        Description=Kubernetes Controller Manager
        Documentation=https://github.com/GoogleCloudPlatform/kubernetes
        Requires=kube-apiserver.service
        After=kube-apiserver.service

        [Service]
        ExecStartPre=/usr/bin/curl -L -o /opt/bin/kube-controller-manager -z /opt/bin/kube-controller-manager http://192.168.1.72/repo/packages/k8/1.0.1/kube-controller-manager
        ExecStartPre=/usr/bin/chmod +x /opt/bin/kube-controller-manager
        ExecStart=/opt/bin/kube-controller-manager \
        --service_account_private_key_file=/opt/bin/kube-serviceaccount.key \
        --master=127.0.0.1:8080 \
        --logtostderr=true
        Restart=always
        RestartSec=10
    - name: kube-scheduler.service
      command: start
      content: |
        [Unit]
        Description=Kubernetes Scheduler
        Documentation=https://github.com/GoogleCloudPlatform/kubernetes
        Requires=kube-apiserver.service
        After=kube-apiserver.service

        [Service]
        ExecStartPre=/usr/bin/curl -L -o /opt/bin/kube-scheduler -z /opt/bin/kube-scheduler http://192.168.1.72/repo/packages/k8/1.0.1/kube-scheduler
        ExecStartPre=/usr/bin/chmod +x /opt/bin/kube-scheduler
        ExecStart=/opt/bin/kube-scheduler --master=127.0.0.1:8080
        Restart=always
        RestartSec=10
    - name: kube-proxy.service
      command: start
      content: |
        [Unit]
        Description=Kubernetes Proxy
        Documentation=https://github.com/GoogleCloudPlatform/kubernetes
        Requires=setup-network-environment.service
        After=setup-network-environment.service
        After=kube-scheduler.service

        [Service]
        ExecStartPre=/usr/bin/curl -L -o /opt/bin/kube-proxy -z /opt/bin/kube-proxy http://192.168.1.72/repo/packages/k8/1.0.1/kube-proxy
        ExecStartPre=/usr/bin/chmod +x /opt/bin/kube-proxy
        ExecStart=/opt/bin/kube-proxy \
        --master=http://master:8080 \
        --logtostderr=true
        Restart=always
        RestartSec=10
    - name: kube-kubelet.service
      command: start
      content: |
        [Unit]
        Description=Kubernetes Kubelet
        Documentation=https://github.com/GoogleCloudPlatform/kubernetes
        Requires=setup-network-environment.service
        After=setup-network-environment.service
        After=kube-scheduler.service

        [Service]
        EnvironmentFile=/etc/network-environment
        ExecStartPre=/usr/bin/curl -L -o /opt/bin/kubelet -z /opt/bin/kubelet http://192.168.1.72/repo/packages/k8/1.0.1/kubelet
        ExecStartPre=/usr/bin/chmod +x /opt/bin/kubelet
        ExecStart=/opt/bin/kubelet \
        --address=0.0.0.0 \
        --port=10250 \
        --api_servers=http://master:8080 \
        --allow_privileged=true \
        --logtostderr=true \
        --cadvisor_port=4194 \
        --healthz_bind_address=0.0.0.0 \
        --healthz_port=10248
        Restart=always
        RestartSec=10
  update:
    group: alpha
    reboot-strategy: off
